for (i in 1:length(pc.pairs)) {
xaxis <- pc.pairs[[i]][1]
yaxis <- pc.pairs[[i]][2]
plts[[i]] <- ggplot(df) +
aes(x = !!sym(xaxis),
y = !!sym(yaxis),
color = !!sym(category),
shape=status) +
geom_point(size=4) +
scale_color_manual(values = manual.color) +
xlab(paste0(xaxis," (",var.explained[as.numeric(gsub("PC","",xaxis))],"%",")")) +
ylab(paste0(yaxis," (",var.explained[as.numeric(gsub("PC","",yaxis))],"%",")")) +
coord_fixed() +
theme_bw() +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 12),
# eliminate rid lines
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none")
}
return(plot_grid(plotlist = plts, nrow = 3, ncol = 2, align = "hv"))
}
tissue.pca.plots <- plotpca(pca.res.df, pc.per, tissue.color, "tissue")
ggsave("../Figures/Supplementary_Figure5/tissue_pca.png",
tissue.pca.plots,
dpi = 300, units = "px", width = 5000, height = 7000)
ggsave("../Figures/Supplementary_Figure5/tissue_pca.png",
tissue.pca.plots,
dpi = 300, units = "px", width = 3000, height = 5000)
# dataframe, list, list, string -> 2D scatter ggplot
# plots and saves 2D scatter plots for data points in the df on each pair of PCA components
# points are colored based on the category (eg. tissue) using the manual color list
# variance explained for each PC is displayed on the axes
plotpca <- function(df, var.explained, manual.color, category) {
# PC pairs
pc.pairs <- combn(colnames(df)[grepl("PC", colnames(df))],
2, simplify = FALSE)
# to store plot for each pair of PCs
plts <- list()
for (i in 1:length(pc.pairs)) {
xaxis <- pc.pairs[[i]][1]
yaxis <- pc.pairs[[i]][2]
plts[[i]] <- ggplot(df) +
aes(x = !!sym(xaxis),
y = !!sym(yaxis),
color = !!sym(category),
shape=status) +
geom_point(size=4) +
scale_color_manual(values = manual.color) +
xlab(paste0(xaxis," (",var.explained[as.numeric(gsub("PC","",xaxis))],"%",")")) +
ylab(paste0(yaxis," (",var.explained[as.numeric(gsub("PC","",yaxis))],"%",")")) +
coord_fixed() +
theme_bw() +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 12),
# eliminate rid lines
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none")
}
combined <- plot_grid(plotlist = plts, nrow = 3, ncol = 2, align = "hv")
legend <- get_plot_component(
plt[[1]] +
theme(
legend.position = "bottom",
legend.direction = "horizontal",
legend.text = element_text(size = 10)
),
"guide-box-bottom",
return_all = TRUE
)
return(plot_grid(combined, legend, nrow = 2, rel_heights = c(4, 0.5)))
}
tissue.pca.plots <- plotpca(pca.res.df, pc.per, tissue.color, "tissue")
# dataframe, list, list, string -> 2D scatter ggplot
# plots and saves 2D scatter plots for data points in the df on each pair of PCA components
# points are colored based on the category (eg. tissue) using the manual color list
# variance explained for each PC is displayed on the axes
plotpca <- function(df, var.explained, manual.color, category) {
# PC pairs
pc.pairs <- combn(colnames(df)[grepl("PC", colnames(df))],
2, simplify = FALSE)
# to store plot for each pair of PCs
plts <- list()
for (i in 1:length(pc.pairs)) {
xaxis <- pc.pairs[[i]][1]
yaxis <- pc.pairs[[i]][2]
plts[[i]] <- ggplot(df) +
aes(x = !!sym(xaxis),
y = !!sym(yaxis),
color = !!sym(category),
shape=status) +
geom_point(size=4) +
scale_color_manual(values = manual.color) +
xlab(paste0(xaxis," (",var.explained[as.numeric(gsub("PC","",xaxis))],"%",")")) +
ylab(paste0(yaxis," (",var.explained[as.numeric(gsub("PC","",yaxis))],"%",")")) +
coord_fixed() +
theme_bw() +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 12),
# eliminate rid lines
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none")
}
combined <- plot_grid(plotlist = plts, nrow = 3, ncol = 2, align = "hv")
legend <- get_plot_component(
plts[[1]] +
theme(
legend.position = "bottom",
legend.direction = "horizontal",
legend.text = element_text(size = 10)
),
"guide-box-bottom",
return_all = TRUE
)
return(plot_grid(combined, legend, nrow = 2, rel_heights = c(4, 0.5)))
}
tissue.pca.plots <- plotpca(pca.res.df, pc.per, tissue.color, "tissue")
ggsave("../Figures/Supplementary_Figure5/tissue_pca.png",
tissue.pca.plots,
dpi = 300, units = "px", width = 3000, height = 5000)
?get_plot_component()
# dataframe, list, list, string -> 2D scatter ggplot
# plots and saves 2D scatter plots for data points in the df on each pair of PCA components
# points are colored based on the category (eg. tissue) using the manual color list
# variance explained for each PC is displayed on the axes
plotpca <- function(df, var.explained, manual.color, category) {
# PC pairs
pc.pairs <- combn(colnames(df)[grepl("PC", colnames(df))],
2, simplify = FALSE)
# to store plot for each pair of PCs
plts <- list()
for (i in 1:length(pc.pairs)) {
xaxis <- pc.pairs[[i]][1]
yaxis <- pc.pairs[[i]][2]
plts[[i]] <- ggplot(df) +
aes(x = !!sym(xaxis),
y = !!sym(yaxis),
color = !!sym(category),
shape=status) +
geom_point(size=4) +
scale_color_manual(values = manual.color) +
xlab(paste0(xaxis," (",var.explained[as.numeric(gsub("PC","",xaxis))],"%",")")) +
ylab(paste0(yaxis," (",var.explained[as.numeric(gsub("PC","",yaxis))],"%",")")) +
coord_fixed() +
theme_bw() +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 12),
# eliminate rid lines
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none")
}
combined <- plot_grid(plotlist = plts, nrow = 3, ncol = 2, align = "hv")
legend <- get_plot_component(
plts[[1]] +
theme(
legend.position = "top",
legend.direction = "horizontal",
legend.text = element_text(size = 10)
),
"guide-box-top",
return_all = TRUE
)
return(plot_grid(legend, combined,
nrow = 2, rel_heights = c(0.5, 4)))
}
tissue.pca.plots <- plotpca(pca.res.df, pc.per, tissue.color, "tissue")
ggsave("../Figures/Supplementary_Figure5/tissue_pca.png",
tissue.pca.plots,
dpi = 300, units = "px", width = 3000, height = 5000)
# dataframe, list, list, string -> 2D scatter ggplot
# plots and saves 2D scatter plots for data points in the df on each pair of PCA components
# points are colored based on the category (eg. tissue) using the manual color list
# variance explained for each PC is displayed on the axes
plotpca <- function(df, var.explained, manual.color, category) {
# PC pairs
pc.pairs <- combn(colnames(df)[grepl("PC", colnames(df))],
2, simplify = FALSE)
# to store plot for each pair of PCs
plts <- list()
for (i in 1:length(pc.pairs)) {
xaxis <- pc.pairs[[i]][1]
yaxis <- pc.pairs[[i]][2]
plts[[i]] <- ggplot(df) +
aes(x = !!sym(xaxis),
y = !!sym(yaxis),
color = !!sym(category),
shape=status) +
geom_point(size=4) +
scale_color_manual(values = manual.color) +
xlab(paste0(xaxis," (",var.explained[as.numeric(gsub("PC","",xaxis))],"%",")")) +
ylab(paste0(yaxis," (",var.explained[as.numeric(gsub("PC","",yaxis))],"%",")")) +
coord_fixed() +
theme_bw() +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 12),
# eliminate rid lines
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none")
}
combined <- plot_grid(plotlist = plts, nrow = 3, ncol = 2, align = "hv")
legend <- get_plot_component(
plts[[1]] +
theme(
legend.position = "top",
legend.direction = "horizontal",
legend.text = element_text(size = 10)
),
"guide-box-top",
return_all = TRUE
)
return(plot_grid(legend, combined,
nrow = 2, rel_heights = c(0.1, 1)))
}
tissue.pca.plots <- plotpca(pca.res.df, pc.per, tissue.color, "tissue")
ggsave("../Figures/Supplementary_Figure5/tissue_pca.png",
tissue.pca.plots,
dpi = 300, units = "px", width = 3000, height = 5000)
# dataframe, list, list, string -> 2D scatter ggplot
# plots and saves 2D scatter plots for data points in the df on each pair of PCA components
# points are colored based on the category (eg. tissue) using the manual color list
# variance explained for each PC is displayed on the axes
plotpca <- function(df, var.explained, manual.color, category) {
# PC pairs
pc.pairs <- combn(colnames(df)[grepl("PC", colnames(df))],
2, simplify = FALSE)
# to store plot for each pair of PCs
plts <- list()
for (i in 1:length(pc.pairs)) {
xaxis <- pc.pairs[[i]][1]
yaxis <- pc.pairs[[i]][2]
plts[[i]] <- ggplot(df) +
aes(x = !!sym(xaxis),
y = !!sym(yaxis),
color = !!sym(category),
shape=status) +
geom_point(size=4) +
scale_color_manual(values = manual.color) +
xlab(paste0(xaxis," (",var.explained[as.numeric(gsub("PC","",xaxis))],"%",")")) +
ylab(paste0(yaxis," (",var.explained[as.numeric(gsub("PC","",yaxis))],"%",")")) +
coord_fixed() +
theme_bw() +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 12),
# eliminate rid lines
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none")
}
combined <- plot_grid(plotlist = plts, nrow = 3, ncol = 2, align = "hv")
legend <- get_plot_component(
plts[[1]] +
theme(
legend.position = "top",
legend.direction = "horizontal",
legend.text = element_text(size = 10),
legend.title = element_blank()
),
"guide-box-top",
return_all = TRUE
)
return(plot_grid(legend, combined,
nrow = 2, rel_heights = c(0.1, 1)))
}
tissue.pca.plots <- plotpca(pca.res.df, pc.per, tissue.color, "tissue")
ggsave("../Figures/Supplementary_Figure5/tissue_pca.png",
tissue.pca.plots,
dpi = 300, units = "px", width = 3000, height = 4000)
ggsave("../Figures/Supplementary_Figure5/tissue_pca.png",
tissue.pca.plots,
dpi = 300, units = "px", width = 4000, height = 4000)
ggsave("../Figures/Supplementary_Figure5/tissue_pca.png",
tissue.pca.plots,
dpi = 300, units = "px", width = 2000, height = 4000)
ggsave("../Figures/Supplementary_Figure5/tissue_pca.png",
tissue.pca.plots,
dpi = 300, units = "px", width = 2500, height = 3500)
# dataframe, list, list, string -> 2D scatter ggplot
# plots and saves 2D scatter plots for data points in the df on each pair of PCA components
# points are colored based on the category (eg. tissue) using the manual color list
# variance explained for each PC is displayed on the axes
plotpca <- function(df, var.explained, manual.color, category) {
# PC pairs
pc.pairs <- combn(colnames(df)[grepl("PC", colnames(df))],
2, simplify = FALSE)
# to store plot for each pair of PCs
plts <- list()
for (i in 1:length(pc.pairs)) {
xaxis <- pc.pairs[[i]][1]
yaxis <- pc.pairs[[i]][2]
plts[[i]] <- ggplot(df) +
aes(x = !!sym(xaxis),
y = !!sym(yaxis),
color = !!sym(category),
shape=status) +
geom_point(size=4) +
scale_color_manual(values = manual.color) +
xlab(paste0(xaxis," (",var.explained[as.numeric(gsub("PC","",xaxis))],"%",")")) +
ylab(paste0(yaxis," (",var.explained[as.numeric(gsub("PC","",yaxis))],"%",")")) +
coord_fixed() +
theme_bw() +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 12),
# eliminate rid lines
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none")
}
combined <- plot_grid(plotlist = plts,
nrow = 3, ncol = 2,
align = "hv", scale = 1.2)
legend <- get_plot_component(
plts[[1]] +
theme(
legend.position = "top",
legend.direction = "horizontal",
legend.text = element_text(size = 10),
legend.title = element_blank()
),
"guide-box-top",
return_all = TRUE
)
return(plot_grid(legend, combined,
nrow = 2, rel_heights = c(0.1, 1)))
}
tissue.pca.plots <- plotpca(pca.res.df, pc.per, tissue.color, "tissue")
ggsave("../Figures/Supplementary_Figure5/tissue_pca.png",
tissue.pca.plots,
dpi = 300, units = "px", width = 3000, height = 5000)
ggsave("../Figures/Supplementary_Figure5/tissue_pca.png",
tissue.pca.plots,
dpi = 300, units = "px", width = 5000, height = 7000)
# dataframe, list, list, string -> 2D scatter ggplot
# plots and saves 2D scatter plots for data points in the df on each pair of PCA components
# points are colored based on the category (eg. tissue) using the manual color list
# variance explained for each PC is displayed on the axes
plotpca <- function(df, var.explained, manual.color, category) {
# PC pairs
pc.pairs <- combn(colnames(df)[grepl("PC", colnames(df))],
2, simplify = FALSE)
# to store plot for each pair of PCs
plts <- list()
for (i in 1:length(pc.pairs)) {
xaxis <- pc.pairs[[i]][1]
yaxis <- pc.pairs[[i]][2]
plts[[i]] <- ggplot(df) +
aes(x = !!sym(xaxis),
y = !!sym(yaxis),
color = !!sym(category),
shape=status) +
geom_point(size=4) +
scale_color_manual(values = manual.color) +
xlab(paste0(xaxis," (",var.explained[as.numeric(gsub("PC","",xaxis))],"%",")")) +
ylab(paste0(yaxis," (",var.explained[as.numeric(gsub("PC","",yaxis))],"%",")")) +
coord_fixed() +
theme_bw() +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 12),
# eliminate rid lines
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none")
}
combined <- plot_grid(plotlist = plts,
nrow = 3, ncol = 2,
align = "hv", scale = 1.1)
legend <- get_plot_component(
plts[[1]] +
theme(
legend.position = "top",
legend.direction = "horizontal",
legend.text = element_text(size = 10),
legend.title = element_blank()
),
"guide-box-top",
return_all = TRUE
)
return(plot_grid(legend, combined,
nrow = 2, rel_heights = c(0.1, 1)))
}
tissue.pca.plots <- plotpca(pca.res.df, pc.per, tissue.color, "tissue")
ggsave("../Figures/Supplementary_Figure5/tissue_pca.png",
tissue.pca.plots,
dpi = 300, units = "px", width = 5000, height = 7000)
# dataframe, list, list, string -> 2D scatter ggplot
# plots and saves 2D scatter plots for data points in the df on each pair of PCA components
# points are colored based on the category (eg. tissue) using the manual color list
# variance explained for each PC is displayed on the axes
plotpca <- function(df, var.explained, manual.color, category) {
# PC pairs
pc.pairs <- combn(colnames(df)[grepl("PC", colnames(df))],
2, simplify = FALSE)
# to store plot for each pair of PCs
plts <- list()
for (i in 1:length(pc.pairs)) {
xaxis <- pc.pairs[[i]][1]
yaxis <- pc.pairs[[i]][2]
plts[[i]] <- ggplot(df) +
aes(x = !!sym(xaxis),
y = !!sym(yaxis),
color = !!sym(category),
shape=status) +
geom_point(size=4) +
scale_color_manual(values = manual.color) +
xlab(paste0(xaxis," (",var.explained[as.numeric(gsub("PC","",xaxis))],"%",")")) +
ylab(paste0(yaxis," (",var.explained[as.numeric(gsub("PC","",yaxis))],"%",")")) +
coord_fixed() +
theme_bw() +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 12),
# eliminate rid lines
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none")
}
combined <- plot_grid(plotlist = plts,
nrow = 3, ncol = 2,
align = "hv")
legend <- get_plot_component(
plts[[1]] +
theme(
legend.position = "top",
legend.direction = "horizontal",
legend.text = element_text(size = 10),
legend.title = element_blank()
),
"guide-box-top",
return_all = TRUE
)
return(plot_grid(legend, combined,
nrow = 2, rel_heights = c(0.1, 1)))
}
tissue.pca.plots <- plotpca(pca.res.df, pc.per, tissue.color, "tissue")
ggsave("../Figures/Supplementary_Figure5/tissue_pca.png",
tissue.pca.plots,
dpi = 300, units = "px", width = 5000, height = 7000)
ggsave("../Figures/Supplementary_Figure5/tissue_pca.png",
tissue.pca.plots,
dpi = 300, units = "px", width = 2500, height = 3500)
# dataframe, list, list, string -> 2D scatter ggplot
# plots and saves 2D scatter plots for data points in the df on each pair of PCA components
# points are colored based on the category (eg. tissue) using the manual color list
# variance explained for each PC is displayed on the axes
plotpca <- function(df, var.explained, manual.color, category) {
# PC pairs
pc.pairs <- combn(colnames(df)[grepl("PC", colnames(df))],
2, simplify = FALSE)
# to store plot for each pair of PCs
plts <- list()
for (i in 1:length(pc.pairs)) {
xaxis <- pc.pairs[[i]][1]
yaxis <- pc.pairs[[i]][2]
plts[[i]] <- ggplot(df) +
aes(x = !!sym(xaxis),
y = !!sym(yaxis),
color = !!sym(category),
shape=status) +
geom_point(size=3) +
scale_color_manual(values = manual.color) +
xlab(paste0(xaxis," (",var.explained[as.numeric(gsub("PC","",xaxis))],"%",")")) +
ylab(paste0(yaxis," (",var.explained[as.numeric(gsub("PC","",yaxis))],"%",")")) +
coord_fixed() +
theme_bw() +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 12),
# eliminate rid lines
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none")
}
combined <- plot_grid(plotlist = plts,
nrow = 3, ncol = 2,
align = "hv")
legend <- get_plot_component(
plts[[1]] +
theme(
legend.position = "top",
legend.direction = "horizontal",
legend.text = element_text(size = 10),
legend.title = element_blank()
),
"guide-box-top",
return_all = TRUE
)
return(plot_grid(legend, combined,
nrow = 2, rel_heights = c(0.1, 1)))
}
tissue.pca.plots <- plotpca(pca.res.df, pc.per, tissue.color, "tissue")
ggsave("../Figures/Supplementary_Figure5/tissue_pca.png",
tissue.pca.plots,
dpi = 300, units = "px", width = 2500, height = 3500)
subs.pca.plots <- plotpca(pca.res.df, pc.per, subs.color, "sub_id")
subs.pca.plots <- plotpca(pca.res.df, pc.per, substrate.color, "sub_id")
ggsave("../Figures/Supplementary_Figure5/pca_substrate.png",
tissue.pca.plots,
dpi = 300, units = "px", width = 2500, height = 3500)
tissue.pca.plots <- plotpca(pca.res.df, pc.per, tissue.color, "tissue")
ggsave("../Figures/Supplementary_Figure5/pca_tissue.png",
tissue.pca.plots,
dpi = 300, units = "px", width = 2500, height = 3500)
tissue.pca.plots <- plotpca(pca.res.df, pc.per, tissue.color, "tissue")
ggsave("../Figures/Supplementary_Figure5/pca_tissue.png",
tissue.pca.plots,
dpi = 300, units = "px", width = 2500, height = 3500)
subs.pca.plots <- plotpca(pca.res.df, pc.per, substrate.color, "sub_id")
ggsave("../Figures/Supplementary_Figure5/pca_substrate.png",
subs.pca.plots,
dpi = 300, units = "px", width = 2500, height = 3500)
