# remove cases with less than minimum number of data points -------
min_cutoff <- 25  # set the cutoff for min. # of data points required
# find the cell-subs pairs with data points < min_cutoff
data_overview <- setNames(vector("list", length(features)), features)
for (f in features) {
data_overview[[f]] <- data[[f]] %>%
mutate(cl_sub = paste(cl_id,"_",sub_id,sep='')) %>%
group_by(cl_sub) %>%
summarise(totalcount = n(), .groups = "drop") %>%
as_tibble() %>%
filter(totalcount < min_cutoff)
}
for (f in features) {
data[[f]] <- data[[f]] %>%
mutate(cl_sub = paste(cl_id,"_",sub_id,sep='')) %>%
filter(!(cl_sub %in% data_overview[[f]]$cl_sub)) %>%
select(-cl_sub)
}
# Keep only the cell line specific data and calculate substrate wise median ------
for (f in features) {
data[[f]] <- data[[f]] %>%
filter(cl_id == cell_line) %>%
group_by(sub_id) %>%
summarize(median = median(feature_value))
}
# To get the legend: -----------
# remove subs_type_I in subs and make 5th, 6th elements HA Collagen and HA Fibronectin
# respectively for subs_type_II. Also comment geom_line() below
breaks_log10 <- function(x) {
low <- floor(log10(min(x)))
high <- ceiling(log10(max(x)))
10^(seq.int(low, high))
}
breaks_5log10 <- function(x) {
low <- floor(log10(min(x)/5))
high <- ceiling(log10(max(x)/5))
5 * 10^(seq.int(low, high))
}
data[[f]] %>%
ggplot(.) +
aes(x = subs_kPa, y = median, shape = subs_type_II, color = subs_type_II) +
geom_point(size = 3) +
scale_shape_manual(values = c("Collagen" = 19, "Fibronectin" = 19,
"HA Collagen" = 17, "HA Fibronectin" = 17, 'Glass' = 15)) +
scale_color_manual(values = c("Collagen" = 'blue', "Fibronectin" = 'red',
"HA Collagen" = 'blue', "HA Fibronectin" = 'red',
'Glass' = 'black')) +
#geom_line(data = data[[f]] %>% filter(subs_type_I %in% c("Collagen","Fibronectin"))) +
annotation_logticks(sides = 'b') +
scale_x_log10(breaks = breaks_log10,
minor_breaks = breaks_5log10,
limits = c(0.2,100)) +
xlab('Substrate Stiffness (kPa)') +
theme_bw() +
theme(legend.text=element_text(size=12),
axis.title.x = element_text(size = 12),  # Change x-axis title size
axis.title.y = element_text(size = 12),  # Change y-axis title size
axis.text.x = element_text(size = 12),   # Change x-axis label size
axis.text.y = element_text(size = 12))    # Change y-axis label size
for (f in features) {
data[[f]] <- data[[f]] %>%
inner_join(., subs, by = 'sub_id')
}
# some global variables ---------
features <- c("area", "circularity", "aspect_ratio",
"cell_stiffness", "motility")
cell_line <- 'T98G'
subs <- data.frame('sub_id' = c('30kPa Coll', '30kPa FN', '500Pa Coll', '500Pa FN',
'HA Coll', 'HA FN', 'Glass'),
'subs_kPa' = c(30, 30, 0.5, 0.5,0.3, 0.3, 500),
'subs_type_I' = as.factor(c('Collagen', 'Fibronectin', 'Collagen', 'Fibronectin',
'Hyaluronic acid', 'Hyaluronic acid', 'Glass')),
'subs_type_II' = as.factor(c('Collagen', 'Fibronectin', 'Collagen', 'Fibronectin',
'Collagen', 'Fibronectin', 'Glass')))
# load the data --------
# define an empty named list for storing data
data <- setNames(vector("list", length(features)), features)
for (f in features){
data[[f]] <- read_tsv(paste0('../../data/',f,'.tsv'),
show_col_types = FALSE) %>% as_tibble()
colnames(data[[f]]) <- c("cl_id", "sub_id", "feature_value")
data[[f]] <- data[[f]] %>% mutate_at(c('cl_id', 'sub_id'), as.factor)
}
# remove cases with less than minimum number of data points -------
min_cutoff <- 25  # set the cutoff for min. # of data points required
# find the cell-subs pairs with data points < min_cutoff
data_overview <- setNames(vector("list", length(features)), features)
for (f in features) {
data_overview[[f]] <- data[[f]] %>%
mutate(cl_sub = paste(cl_id,"_",sub_id,sep='')) %>%
group_by(cl_sub) %>%
summarise(totalcount = n(), .groups = "drop") %>%
as_tibble() %>%
filter(totalcount < min_cutoff)
}
for (f in features) {
data[[f]] <- data[[f]] %>%
mutate(cl_sub = paste(cl_id,"_",sub_id,sep='')) %>%
filter(!(cl_sub %in% data_overview[[f]]$cl_sub)) %>%
select(-cl_sub)
}
# Keep only the cell line specific data and calculate substrate wise median ------
for (f in features) {
data[[f]] <- data[[f]] %>%
filter(cl_id == cell_line) %>%
group_by(sub_id) %>%
summarize(median = median(feature_value)) %>%
inner_join(., subs, by = 'sub_id')
}
breaks_log10 <- function(x) {
low <- floor(log10(min(x)))
high <- ceiling(log10(max(x)))
10^(seq.int(low, high))
}
breaks_5log10 <- function(x) {
low <- floor(log10(min(x)/5))
high <- ceiling(log10(max(x)/5))
5 * 10^(seq.int(low, high))
}
data[[f]] %>%
ggplot(.) +
aes(x = subs_kPa, y = median, shape = subs_type_II, color = subs_type_II) +
geom_point(size = 3) +
scale_shape_manual(values = c("Collagen" = 19, "Fibronectin" = 19,
"HA Collagen" = 17, "HA Fibronectin" = 17, 'Glass' = 15)) +
scale_color_manual(values = c("Collagen" = 'blue', "Fibronectin" = 'red',
"HA Collagen" = 'blue', "HA Fibronectin" = 'red',
'Glass' = 'black')) +
#geom_line(data = data[[f]] %>% filter(subs_type_I %in% c("Collagen","Fibronectin"))) +
annotation_logticks(sides = 'b') +
scale_x_log10(breaks = breaks_log10,
minor_breaks = breaks_5log10,
limits = c(0.2,100)) +
xlab('Substrate Stiffness (kPa)') +
theme_bw() +
theme(legend.text=element_text(size=12),
axis.title.x = element_text(size = 12),  # Change x-axis title size
axis.title.y = element_text(size = 12),  # Change y-axis title size
axis.text.x = element_text(size = 12),   # Change x-axis label size
axis.text.y = element_text(size = 12))    # Change y-axis label size
data[[f]] %>%
ggplot(.) +
aes(x = subs_kPa, y = median, shape = subs_type_II, color = subs_type_II) +
geom_point(size = 3) +
scale_shape_manual(values = c("Collagen" = 19, "Fibronectin" = 19,
"HA Collagen" = 17, "HA Fibronectin" = 17, 'Glass' = 15)) +
scale_color_manual(values = c("Collagen" = 'blue', "Fibronectin" = 'red',
"HA Collagen" = 'blue', "HA Fibronectin" = 'red',
'Glass' = 'black')) +
geom_line(data = data[[f]] %>% filter(subs_type_I %in% c("Collagen","Fibronectin"))) +
annotation_logticks(sides = 'b') +
scale_x_log10(breaks = breaks_log10,
minor_breaks = breaks_5log10,
limits = c(0.2,100)) +
xlab('Substrate Stiffness (kPa)') +
theme_bw() +
theme(legend.text=element_text(size=12),
axis.title.x = element_text(size = 12),  # Change x-axis title size
axis.title.y = element_text(size = 12),  # Change y-axis title size
axis.text.x = element_text(size = 12),   # Change x-axis label size
axis.text.y = element_text(size = 12))    # Change y-axis label size
data[[f]] %>%
ggplot(.) +
aes(x = subs_kPa, y = median, shape = subs_type_I, color = subs_type_II) +
geom_point(size = 3) +
scale_shape_manual(values = c("Collagen" = 19, "Fibronectin" = 19,
"HA Collagen" = 17, "HA Fibronectin" = 17, 'Glass' = 15)) +
scale_color_manual(values = c("Collagen" = 'blue', "Fibronectin" = 'red',
"HA Collagen" = 'blue', "HA Fibronectin" = 'red',
'Glass' = 'black')) +
# geom_line(data = data[[f]] %>% filter(subs_type_I %in% c("Collagen","Fibronectin"))) +
annotation_logticks(sides = 'b') +
scale_x_log10(breaks = breaks_log10,
minor_breaks = breaks_5log10,
limits = c(0.2,100)) +
xlab('Substrate Stiffness (kPa)') +
theme_bw() +
theme(legend.text=element_text(size=12),
axis.title.x = element_text(size = 12),  # Change x-axis title size
axis.title.y = element_text(size = 12),  # Change y-axis title size
axis.text.x = element_text(size = 12),   # Change x-axis label size
axis.text.y = element_text(size = 12))    # Change y-axis label size
View(data$motility)
data[[f]]$subs_type_II[5:6] <- c("HA Collagen", "HA Fibronectin")
View(data$motility)
# some global variables ---------
features <- c("area", "circularity", "aspect_ratio",
"cell_stiffness", "motility")
cell_line <- 'T98G'
subs <- data.frame('sub_id' = c('30kPa Coll', '30kPa FN', '500Pa Coll', '500Pa FN',
'HA Coll', 'HA FN', 'Glass'),
'subs_kPa' = c(30, 30, 0.5, 0.5,0.3, 0.3, 500),
'subs_type_I' = as.factor(c('Collagen', 'Fibronectin', 'Collagen', 'Fibronectin',
'Hyaluronic acid', 'Hyaluronic acid', 'Glass')),
'subs_type_II' = as.factor(c('Collagen', 'Fibronectin', 'Collagen', 'Fibronectin',
'Collagen', 'Fibronectin', 'Glass')))
# load the data --------
# define an empty named list for storing data
data <- setNames(vector("list", length(features)), features)
for (f in features){
data[[f]] <- read_tsv(paste0('../../data/',f,'.tsv'),
show_col_types = FALSE) %>% as_tibble()
colnames(data[[f]]) <- c("cl_id", "sub_id", "feature_value")
data[[f]] <- data[[f]] %>% mutate_at(c('cl_id', 'sub_id'), as.factor)
}
# remove cases with less than minimum number of data points -------
min_cutoff <- 25  # set the cutoff for min. # of data points required
# find the cell-subs pairs with data points < min_cutoff
data_overview <- setNames(vector("list", length(features)), features)
for (f in features) {
data_overview[[f]] <- data[[f]] %>%
mutate(cl_sub = paste(cl_id,"_",sub_id,sep='')) %>%
group_by(cl_sub) %>%
summarise(totalcount = n(), .groups = "drop") %>%
as_tibble() %>%
filter(totalcount < min_cutoff)
}
for (f in features) {
data[[f]] <- data[[f]] %>%
mutate(cl_sub = paste(cl_id,"_",sub_id,sep='')) %>%
filter(!(cl_sub %in% data_overview[[f]]$cl_sub)) %>%
select(-cl_sub)
}
# Keep only the cell line specific data and calculate substrate wise median ------
for (f in features) {
data[[f]] <- data[[f]] %>%
filter(cl_id == cell_line) %>%
group_by(sub_id) %>%
summarize(median = median(feature_value)) %>%
inner_join(., subs, by = 'sub_id')
}
View(data$motility)
data[[f]]$subs_type_II[which(data[[f]]$sub_id == "HA Coll")] <- "HA Collagen"
data[[f]]$subs_type_II[which(data[[f]]$sub_id == "HA FN")] <- "HA Fibronectin"
# some global variables ---------
features <- c("area", "circularity", "aspect_ratio",
"cell_stiffness", "motility")
cell_line <- 'T98G'
subs <- data.frame('sub_id' = c('30kPa Coll', '30kPa FN', '500Pa Coll', '500Pa FN',
'HA Coll', 'HA FN', 'Glass'),
'subs_kPa' = c(30, 30, 0.5, 0.5,0.3, 0.3, 500),
'subs_type_I' = as.factor(c('Collagen', 'Fibronectin', 'Collagen', 'Fibronectin',
'Hyaluronic acid', 'Hyaluronic acid', 'Glass')),
'subs_type_II' = as.factor(c('Collagen', 'Fibronectin', 'Collagen', 'Fibronectin',
'Collagen', 'Fibronectin', 'Glass')))
# load the data --------
# define an empty named list for storing data
data <- setNames(vector("list", length(features)), features)
for (f in features){
data[[f]] <- read_tsv(paste0('../../data/',f,'.tsv'),
show_col_types = FALSE) %>% as_tibble()
colnames(data[[f]]) <- c("cl_id", "sub_id", "feature_value")
data[[f]] <- data[[f]] %>% mutate_at(c('cl_id', 'sub_id'), as.factor)
}
# remove cases with less than minimum number of data points -------
min_cutoff <- 25  # set the cutoff for min. # of data points required
# find the cell-subs pairs with data points < min_cutoff
data_overview <- setNames(vector("list", length(features)), features)
for (f in features) {
data_overview[[f]] <- data[[f]] %>%
mutate(cl_sub = paste(cl_id,"_",sub_id,sep='')) %>%
group_by(cl_sub) %>%
summarise(totalcount = n(), .groups = "drop") %>%
as_tibble() %>%
filter(totalcount < min_cutoff)
}
for (f in features) {
data[[f]] <- data[[f]] %>%
mutate(cl_sub = paste(cl_id,"_",sub_id,sep='')) %>%
filter(!(cl_sub %in% data_overview[[f]]$cl_sub)) %>%
select(-cl_sub)
}
# Keep only the cell line specific data and calculate substrate wise median ------
for (f in features) {
data[[f]] <- data[[f]] %>%
filter(cl_id == cell_line) %>%
group_by(sub_id) %>%
summarize(median = median(feature_value)) %>%
inner_join(., subs, by = 'sub_id')
}
data[[f]]$subs_type_II[which(data[[f]]$sub_id == "HA Coll")] <- as.factor("HA Collagen")
data[[f]]$subs_type_II[which(data[[f]]$sub_id == "HA Coll")]
# some global variables ---------
features <- c("area", "circularity", "aspect_ratio",
"cell_stiffness", "motility")
cell_line <- 'T98G'
subs <- data.frame('sub_id' = c('30kPa Coll', '30kPa FN', '500Pa Coll', '500Pa FN',
'HA Coll', 'HA FN', 'Glass'),
'subs_kPa' = c(30, 30, 0.5, 0.5,0.3, 0.3, 500),
'subs_type_I' = as.factor(c('Collagen', 'Fibronectin', 'Collagen', 'Fibronectin',
'Hyaluronic acid', 'Hyaluronic acid', 'Glass')),
'subs_type_II' = as.factor(c('Collagen', 'Fibronectin', 'Collagen', 'Fibronectin',
'Collagen', 'Fibronectin', 'Glass')))
# load the data --------
# define an empty named list for storing data
data <- setNames(vector("list", length(features)), features)
for (f in features){
data[[f]] <- read_tsv(paste0('../../data/',f,'.tsv'),
show_col_types = FALSE) %>% as_tibble()
colnames(data[[f]]) <- c("cl_id", "sub_id", "feature_value")
data[[f]] <- data[[f]] %>% mutate_at(c('cl_id', 'sub_id'), as.factor)
}
# remove cases with less than minimum number of data points -------
min_cutoff <- 25  # set the cutoff for min. # of data points required
# find the cell-subs pairs with data points < min_cutoff
data_overview <- setNames(vector("list", length(features)), features)
for (f in features) {
data_overview[[f]] <- data[[f]] %>%
mutate(cl_sub = paste(cl_id,"_",sub_id,sep='')) %>%
group_by(cl_sub) %>%
summarise(totalcount = n(), .groups = "drop") %>%
as_tibble() %>%
filter(totalcount < min_cutoff)
}
for (f in features) {
data[[f]] <- data[[f]] %>%
mutate(cl_sub = paste(cl_id,"_",sub_id,sep='')) %>%
filter(!(cl_sub %in% data_overview[[f]]$cl_sub)) %>%
select(-cl_sub)
}
# Keep only the cell line specific data and calculate substrate wise median ------
for (f in features) {
data[[f]] <- data[[f]] %>%
filter(cl_id == cell_line) %>%
group_by(sub_id) %>%
summarize(median = median(feature_value)) %>%
inner_join(., subs, by = 'sub_id')
}
temp <- data[[f]] %>%
select(-subs_type_I) %>%
mutate(subs_type_II = as.character(subs_type_II))
temp$subs_type_II[which(temp$sub_id == "HA Coll")] <- "HA Collagen"
temp$subs_type_II[which(temp$sub_id == "HA FN")] <- "HA Fibronectin"
temp
temp %>%
# change subs_type_II to factor
mutate(subs_type_II = as.factor(subs_type_II)) %>%
ggplot(.) +
aes(x = subs_kPa, y = median, shape = subs_type_II, color = subs_type_II) +
geom_point(size = 3) +
scale_shape_manual(values = c("Collagen" = 19, "Fibronectin" = 19,
"HA Collagen" = 17, "HA Fibronectin" = 17, 'Glass' = 15)) +
scale_color_manual(values = c("Collagen" = 'blue', "Fibronectin" = 'red',
"HA Collagen" = 'blue', "HA Fibronectin" = 'red',
'Glass' = 'black')) +
# geom_line(data = data[[f]] %>% filter(subs_type_I %in% c("Collagen","Fibronectin"))) +
annotation_logticks(sides = 'b') +
scale_x_log10(breaks = breaks_log10,
minor_breaks = breaks_5log10,
limits = c(0.2,100)) +
xlab('Substrate Stiffness (kPa)') +
theme_bw() +
theme(legend.text=element_text(size=12),
axis.title.x = element_text(size = 12),  # Change x-axis title size
axis.title.y = element_text(size = 12),  # Change y-axis title size
axis.text.x = element_text(size = 12),   # Change x-axis label size
axis.text.y = element_text(size = 12))    # Change y-axis label size
lgd <- temp %>%
# change subs_type_II to factor
mutate(subs_type_II = as.factor(subs_type_II)) %>%
ggplot(.) +
aes(x = subs_kPa, y = median, shape = subs_type_II, color = subs_type_II) +
geom_point(size = 3) +
scale_shape_manual(values = c("Collagen" = 19, "Fibronectin" = 19,
"HA Collagen" = 17, "HA Fibronectin" = 17, 'Glass' = 15)) +
scale_color_manual(values = c("Collagen" = 'blue', "Fibronectin" = 'red',
"HA Collagen" = 'blue', "HA Fibronectin" = 'red',
'Glass' = 'black')) +
annotation_logticks(sides = 'b') +
scale_x_log10(breaks = breaks_log10,
minor_breaks = breaks_5log10,
limits = c(0.2,100)) +
xlab('Substrate Stiffness (kPa)') +
theme_bw() +
theme(legend.text=element_text(size=12),
legend.title=element_blank())
# extract legend from ggplot and plot it separately
g_legend <- function(a.gplot){
tmp <- ggplot_gtable(ggplot_build(a.gplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
return(legend)
}
legend <- g_legend(lgd)
legend
png("legend.png", width = 500, height = 500, res = 300)
# extract legend from ggplot using cowplot and plot it separately
legend <- cowplot::get_legend(lgd)
legend <- g_legend(lgd)
# extract legend from ggplot using cowplot and plot it separately
legend <- cowplot::get_legend(lgd)
legend
# load packages ------
suppressPackageStartupMessages({
library(tidyverse)
library(patchwork)
library(plotrix)
library(cowplot)
})
# extract legend from ggplot using cowplot and plot it separately
legend <- get_plot_component(
lgd +
theme(
legend.text = element_text(size = 12),
legend.title = element_blank()
),
"guide-box-right"
)
png("legend.png", legend, width = 500, height = 500, res = 300)
png("legend.png", width = 500, height = 500, res = 300)
print(legend)
dev.off()
# extract legend from ggplot using cowplot and plot it separately
legend <- get_plot_component(
lgd +
theme(
legend.text = element_text(size = 12),
legend.title = element_blank()
),
"guide-box-right"
)
# save the plot
ggsave("legend.png",
plot_grid(legend, ncol = 1),
device = "png", width = 6, height = 3
)
# save the plot
ggsave("substrate_legend.png",
plot_grid(legend, ncol = 1),
device = "png", width = 2, height = 1
)
# save the plot
ggsave("substrate_legend.png",
plot_grid(legend, ncol = 1),
device = "png",
width = 200,
height = 160,
units = "px"
)
# save the legend
ggsave("substrate_legend.png",
plot_grid(legend, ncol = 1),
device = "png",
width = 800,
height = 640,
units = "px"
)
# save the legend
ggsave("substrate_legend.png",
plot_grid(legend, ncol = 1),
device = "png",
width = 600,
height = 480,
units = "px"
)
lgd <- temp %>%
# change subs_type_II to factor
mutate(subs_type_II = as.factor(subs_type_II)) %>%
ggplot(.) +
aes(x = subs_kPa, y = median, shape = subs_type_II, color = subs_type_II) +
geom_point(size = 3) +
scale_shape_manual(values = c("Collagen" = 19, "Fibronectin" = 19,
"HA Collagen" = 17, "HA Fibronectin" = 17, 'Glass' = 15)) +
scale_color_manual(values = c("Collagen" = 'blue', "Fibronectin" = 'red',
"HA Collagen" = 'blue', "HA Fibronectin" = 'red',
'Glass' = 'black'))
# extract legend from ggplot using cowplot
legend <- get_plot_component(
lgd +
theme(
legend.text = element_text(size = 12),
legend.title = element_blank()
),
"guide-box-right"
)
# save the legend
ggsave("substrate_legend.png",
plot_grid(legend, ncol = 1),
device = "png",
width = 600,
height = 480,
units = "px"
)
lgd <- temp %>%
# change subs_type_II to factor
mutate(subs_type_II = as.factor(subs_type_II)) %>%
ggplot(.) +
aes(x = subs_kPa, y = median, shape = subs_type_II, color = subs_type_II) +
geom_point(size = 3) +
scale_shape_manual(values = c("Collagen" = 19, "Fibronectin" = 19,
"HA Collagen" = 17, "HA Fibronectin" = 17, 'Glass' = 15)) +
scale_color_manual(values = c("Collagen" = 'blue', "Fibronectin" = 'red',
"HA Collagen" = 'blue', "HA Fibronectin" = 'red',
'Glass' = 'black')) +
theme_bw()
# extract legend from ggplot using cowplot
legend <- get_plot_component(
lgd +
theme(
legend.text = element_text(size = 12),
legend.title = element_blank()
),
"guide-box-right"
)
# save the legend
ggsave("substrate_legend.png",
plot_grid(legend, ncol = 1),
device = "png",
width = 600,
height = 480,
units = "px"
)
